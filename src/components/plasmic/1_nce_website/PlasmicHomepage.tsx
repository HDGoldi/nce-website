// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: esfshpqx8ZjBqQ8kozVymU
// Component: ptWm8QD-5SmX
import * as React from "react"

import { Link, GatsbyLinkProps as LinkProps } from "gatsby"

import * as p from "@plasmicapp/react-web"
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Button1 from "../../Button1" // plasmic-import: EPtFtCkT_p/component

import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_1_nce_website.module.css" // plasmic-import: esfshpqx8ZjBqQ8kozVymU/projectcss
import * as sty from "./PlasmicHomepage.module.css" // plasmic-import: ptWm8QD-5SmX/css

export type PlasmicHomepage__VariantMembers = {}

export type PlasmicHomepage__VariantsArgs = {}
type VariantPropType = keyof PlasmicHomepage__VariantsArgs
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>()

export type PlasmicHomepage__ArgsType = {}
type ArgPropType = keyof PlasmicHomepage__ArgsType
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>()

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">
  button1?: p.Flex<typeof Button1>
}

export interface DefaultHomepageProps {
  className?: string
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs
  args: PlasmicHomepage__ArgsType
  overrides: PlasmicHomepage__OverridesType
  forNode?: string
}) {
  const { variants, args, overrides, forNode } = props

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.box__c0J0)}>
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__s7DPj
              )}
            >
              {"IoT for business customers"}
            </div>
          </div>

          <div className={classNames(defaultcss.all, sty.box__jDt1P)}>
            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__rs8O1
              )}
              component={Link}
              href={"https://1nce.com/en/careers/" as const}
              platform={"gatsby"}
            >
              {"Careers"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__tMgGq
              )}
              component={Link}
              href={"https://1nce.com/en/help-center/" as const}
              platform={"gatsby"}
            >
              {"Support"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__k7Sr
              )}
              component={Link}
              href={"https://1nce.com/en/1nce-newsletter/" as const}
              platform={"gatsby"}
            >
              {"Newsletter"}
            </p.PlasmicLink>

            <Button1
              data-plasmic-name={"button1"}
              data-plasmic-override={overrides.button1}
              className={classNames("__wab_instance", sty.button1)}
            />

            <button
              className={classNames(
                defaultcss.button,
                defaultcss.__wab_text,
                sty.button__fv9WT
              )}
            >
              {"Login"}
            </button>

            <button
              className={classNames(
                defaultcss.button,
                defaultcss.__wab_text,
                sty.button__w9Bcl
              )}
            >
              {"AWS Marketplace"}
            </button>
          </div>

          <div className={classNames(defaultcss.all, sty.box__rDuq4)}>
            <div className={classNames(defaultcss.all, sty.box__swDn3)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___3KcwS
                )}
              >
                {"IOT FLAT RATE"}
              </div>
            </div>

            <div className={classNames(defaultcss.all, sty.box__rUrpi)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__jUsAo
                )}
              >
                {"NETWORK"}
              </div>
            </div>

            <div className={classNames(defaultcss.all, sty.box___3TgP3)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__r5Zzg
                )}
              >
                {"NEWS AND INSIGHTS"}
              </div>
            </div>

            <div className={classNames(defaultcss.all, sty.box__eaTt)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__oNb8Q
                )}
              >
                {"COMPANY"}
              </div>
            </div>
          </div>

          <div className={classNames(defaultcss.all, sty.box__wf29M)}>
            <div className={classNames(defaultcss.all, sty.box__ivjvZ)}>
              <div className={classNames(defaultcss.all, sty.box__tgQ2J)}>
                <div className={classNames(defaultcss.all, sty.box__dkKp1)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__brdvy
                    )}
                  >
                    {"Get ready for"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___73M5S
                    )}
                  >
                    {"1NCE FOR ALL!"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__hD6Hu
                    )}
                  >
                    {
                      "12 MONTH OF FREE IOT CONNECTIVITY. 1NCE For All is a free IoT tariff to connect IoT Solutions without any costs. The free IoT SIM can be ordered exclusively in AWS Marketplace."
                    }
                  </div>
                </div>

                <div className={classNames(defaultcss.all, sty.box__skpEg)} />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: ["root", "button1"],
  button1: ["button1"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<
  T extends NodeNameType
> = typeof PlasmicDescendants[T][number]
type NodeDefaultElementType = {
  root: "div"
  button1: typeof Button1
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> = { // Explicitly specify variants, args, and overrides as objects
  variants?: PlasmicHomepage__VariantsArgs
  args?: PlasmicHomepage__ArgsType
  overrides?: NodeOverridesType<T>
} & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
  // Specify args directly as props
  Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
  // Specify overrides for each element directly as props
  Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
  // Specify props for the root element
  Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps,
    })

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage"
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`
  }
  return func
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button1: makeNodeComponent("button1"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
  }
)

export default PlasmicHomepage
/* prettier-ignore-end */
